name: Deploy to GKE

on:
  push:
    branches:
      - main     # Trigger only when development branch is merged into mainb

env:
  PROJECT_ID: firm-pentameter-475405-i2
  GKE_CLUSTER: hello-world-cluster
  GKE_ZONE: asia-south1-a
  GAR_LOCATION: asia-south1
  REPOSITORY: hello-worldapprepo
  IMAGE: hello_world_app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Authenticate with GCP using Service Account
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3Ô∏è‚É£ Set up gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

           # Install gke-gcloud-auth-plugin
      - name: Install GKE gcloud auth plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet
          gcloud components update --quiet


      # 4Ô∏è‚É£ Configure Docker to use Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      # 5Ô∏è‚É£ Install app dependencies (Node.js)
      - name: Install Node.js dependencies
        working-directory: ./Hello_world_app
        run: |
          npm install
          # optional: npm run build

      # 6Ô∏è‚É£ Build Docker image
      - name: Build Docker image
        run: |
          docker build -f ./Hello_world_app/Dockerfile -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }} .

      # 7Ô∏è‚É£ Push image to Artifact Registry
      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}

      # 8Ô∏è‚É£ Get GKE credentials
      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --region ${{ env.GAR_LOCATION }} --project ${{ env.PROJECT_ID }}

      # 9Ô∏è‚É£ Update image in Kubernetes manifests
      - name: Update Kubernetes Deployment image
        run: |
          sed -i "s|image:.*|image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}|g" k8s/deployment.yaml

      # üîü Deploy to GKE
      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/
          kubectl set image deployment/hello-world-deployment \
            hello-world-container=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
          kubectl rollout status deployment/hello-world-deployment
          kubectl get pods
